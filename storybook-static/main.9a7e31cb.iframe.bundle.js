(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{466:function(module,exports,__webpack_require__){__webpack_require__(467),__webpack_require__(623),__webpack_require__(624),__webpack_require__(828),__webpack_require__(829),__webpack_require__(834),__webpack_require__(835),__webpack_require__(833),__webpack_require__(831),__webpack_require__(836),__webpack_require__(830),__webpack_require__(832),__webpack_require__(837),module.exports=__webpack_require__(822)},534:function(module,exports){},624:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(331)},822:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(331).configure)([__webpack_require__(823)],module,!1)}).call(this,__webpack_require__(189)(module))},823:function(module,exports,__webpack_require__){var map={"./GqlFilterView.stories.tsx":824,"./GqlForm.stories.tsx":826,"./GqlView.stories.tsx":827};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=823},824:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(12),__webpack_require__(280),__webpack_require__(0);var _src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(96),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(55),meta={title:"Filter View",component:_src__WEBPACK_IMPORTED_MODULE_3__.a};__webpack_exports__.default=meta;var Template=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_src__WEBPACK_IMPORTED_MODULE_3__.a,Object.assign({},args))};Template.displayName="Template";var Default=Template.bind({});Default.args={children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{children:"test"})},Default.parameters=Object.assign({storySource:{source:"args => <GqlFilterView {...args} />"}},Default.parameters);try{Meta.displayName="Meta",Meta.__docgenInfo={description:"Metadata to configure the stories for a component.",displayName:"Meta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/GqlFilterView.stories.tsx#Meta"]={docgenInfo:Meta.__docgenInfo,name:"Meta",path:"stories/GqlFilterView.stories.tsx#Meta"})}catch(__react_docgen_typescript_loader_error){}},826:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(12),__webpack_require__(280),__webpack_require__(0);var _src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(96),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(55),meta={title:"Form",component:_src__WEBPACK_IMPORTED_MODULE_3__.b};__webpack_exports__.default=meta;var Template=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_src__WEBPACK_IMPORTED_MODULE_3__.b,Object.assign({},args))};Template.displayName="Template";var Default=Template.bind({});Default.args={children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{children:"test"})},Default.parameters=Object.assign({storySource:{source:"args => <GqlForm {...args} />"}},Default.parameters);try{Meta.displayName="Meta",Meta.__docgenInfo={description:"Metadata to configure the stories for a component.",displayName:"Meta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/GqlForm.stories.tsx#Meta"]={docgenInfo:Meta.__docgenInfo,name:"Meta",path:"stories/GqlForm.stories.tsx#Meta"})}catch(__react_docgen_typescript_loader_error){}},827:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(12),__webpack_require__(280),__webpack_require__(0);var _src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(96),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(55),meta={title:"View",component:_src__WEBPACK_IMPORTED_MODULE_3__.c};__webpack_exports__.default=meta;var Template=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_src__WEBPACK_IMPORTED_MODULE_3__.c,Object.assign({},args))};Template.displayName="Template";var Default=Template.bind({});Default.args={children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{children:"test"})},Default.parameters=Object.assign({storySource:{source:"args => <GqlView {...args} />"}},Default.parameters);try{Meta.displayName="Meta",Meta.__docgenInfo={description:"Metadata to configure the stories for a component.",displayName:"Meta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/GqlView.stories.tsx#Meta"]={docgenInfo:Meta.__docgenInfo,name:"Meta",path:"stories/GqlView.stories.tsx#Meta"})}catch(__react_docgen_typescript_loader_error){}},837:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__(23),__webpack_require__(5),__webpack_require__(46),__webpack_require__(413),__webpack_require__(819),__webpack_require__(45),__webpack_require__(820),__webpack_require__(821),__webpack_require__(412);var client_api=__webpack_require__(845),types=__webpack_require__(843),esm=__webpack_require__(4),parameters={actions:{argTypesRegex:"^on.*"}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.c)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.d)(loader,!1)}));case"parameters":return Object(client_api.e)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(client_api.b)(enhancer)}));case"render":return Object(types.setGlobalRender)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.e)(v,!1);default:return console.log(key+" was not supported :( !")}}))},96:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return GqlForm_GqlForm})),__webpack_require__.d(__webpack_exports__,"c",(function(){return GqlView_GqlView})),__webpack_require__.d(__webpack_exports__,"a",(function(){return GqlFilterView_GqlFilterView}));__webpack_require__(0);var jsx_runtime=__webpack_require__(55),GqlFilterView_GqlFilterView=function GqlFilterView(){return Object(jsx_runtime.jsx)("div",{})};GqlFilterView_GqlFilterView.displayName="GqlFilterView";try{GqlFilterView_GqlFilterView.displayName="GqlFilterView",GqlFilterView_GqlFilterView.__docgenInfo={description:"Open views into the database objects matching the filter.",displayName:"GqlFilterView",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GqlFilterView.tsx#GqlFilterView"]={docgenInfo:GqlFilterView_GqlFilterView.__docgenInfo,name:"GqlFilterView",path:"src/components/GqlFilterView.tsx#GqlFilterView"})}catch(__react_docgen_typescript_loader_error){}var GqlForm_GqlForm=function GqlForm(){return Object(jsx_runtime.jsx)("div",{})};GqlForm_GqlForm.displayName="GqlForm";try{GqlForm_GqlForm.displayName="GqlForm",GqlForm_GqlForm.__docgenInfo={description:"A live GQL-powered form which loads existing values from the backend and\nupdates the field as necessary. Submitting will update a reference or create\na new one depending on the `method` value.",displayName:"GqlForm",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GqlForm.tsx#GqlForm"]={docgenInfo:GqlForm_GqlForm.__docgenInfo,name:"GqlForm",path:"src/components/GqlForm.tsx#GqlForm"})}catch(__react_docgen_typescript_loader_error){}var GqlView_GqlView=function GqlView(){return Object(jsx_runtime.jsx)("div",{})};GqlView_GqlView.displayName="GqlView";try{GqlView_GqlView.displayName="GqlView",GqlView_GqlView.__docgenInfo={description:"Read a piece of data from the backend and display it in a component.",displayName:"GqlView",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GqlView.tsx#GqlView"]={docgenInfo:GqlView_GqlView.__docgenInfo,name:"GqlView",path:"src/components/GqlView.tsx#GqlView"})}catch(__react_docgen_typescript_loader_error){}try{GqlForm.displayName="GqlForm",GqlForm.__docgenInfo={description:"A live GQL-powered form which loads existing values from the backend and\nupdates the field as necessary. Submitting will update a reference or create\na new one depending on the `method` value.",displayName:"GqlForm",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#GqlForm"]={docgenInfo:GqlForm.__docgenInfo,name:"GqlForm",path:"src/index.tsx#GqlForm"})}catch(__react_docgen_typescript_loader_error){}try{GqlView.displayName="GqlView",GqlView.__docgenInfo={description:"Read a piece of data from the backend and display it in a component.",displayName:"GqlView",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#GqlView"]={docgenInfo:GqlView.__docgenInfo,name:"GqlView",path:"src/index.tsx#GqlView"})}catch(__react_docgen_typescript_loader_error){}try{GqlFilterView.displayName="GqlFilterView",GqlFilterView.__docgenInfo={description:"Open views into the database objects matching the filter.",displayName:"GqlFilterView",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#GqlFilterView"]={docgenInfo:GqlFilterView.__docgenInfo,name:"GqlFilterView",path:"src/index.tsx#GqlFilterView"})}catch(__react_docgen_typescript_loader_error){}}},[[466,2,3]]]);